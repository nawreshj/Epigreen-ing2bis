{"ast":null,"code":"var _jsxFileName = \"/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/epigreen-front/src/components/Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = () => {\n  _s();\n  const [data, setData] = useState(null); // État pour stocker les données reçues\n  const [error, setError] = useState(null); // État pour stocker les erreurs\n\n  useEffect(() => {\n    fetch('/api/info').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Data:\", data); // Vérifie la réponse JSON\n      setData(data.message); // Stocke le message\n    }).catch(err => {\n      console.error(\"Error:\", err.message); // Gère les erreurs\n      setError(err.message);\n    });\n  }, []);\n\n  // Affichage conditionnel en fonction de l'état\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Erreur : \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"output\",\n    children: data ? data : \"Chargement des données...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Logs","_s","data","setData","error","setError","fetch","then","response","ok","Error","status","json","console","log","message","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/epigreen-front/src/components/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Logs = () => {\r\n    const [data, setData] = useState(null); // État pour stocker les données reçues\r\n    const [error, setError] = useState(null); // État pour stocker les erreurs\r\n\r\n    useEffect(() => {\r\n        fetch('/api/info')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log(\"Data:\", data); // Vérifie la réponse JSON\r\n                setData(data.message); // Stocke le message\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error:\", err.message); // Gère les erreurs\r\n                setError(err.message);\r\n            });\r\n    }, []);\r\n\r\n\r\n    // Affichage conditionnel en fonction de l'état\r\n    if (error) {\r\n        return <div>Erreur : {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div id=\"output\">\r\n            {data ? data : \"Chargement des données...\"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,WAAW,CAAC,CACbC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAAEL,IAAI,IAAK;MACZW,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEZ,IAAI,CAAC,CAAC,CAAC;MAC5BC,OAAO,CAACD,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZJ,OAAO,CAACT,KAAK,CAAC,QAAQ,EAAEa,GAAG,CAACF,OAAO,CAAC,CAAC,CAAC;MACtCV,QAAQ,CAACY,GAAG,CAACF,OAAO,CAAC;IACzB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,IAAIX,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAmB,QAAA,GAAK,WAAS,EAACd,KAAK;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtC;EAEA,oBACIvB,OAAA;IAAKwB,EAAE,EAAC,QAAQ;IAAAL,QAAA,EACXhB,IAAI,GAAGA,IAAI,GAAG;EAA2B;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAACrB,EAAA,CAjCID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}