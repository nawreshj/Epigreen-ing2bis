{"ast":null,"code":"var _jsxFileName = \"/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/epigreen-front/src/components/Customer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { GET_CUSTOMERS, LOCAL_HOST_CUSTOMER } from \"../constants/back\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getCustomerById = async customerId => {\n  try {\n    const response = await axios.get(LOCAL_HOST_CUSTOMER + customerId);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération du client : \", error);\n    return null;\n  }\n};\nexport default function Customer() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const setCustomerData = async () => {\n    axios.get(GET_CUSTOMERS).then(response => {\n      setCustomers(response.data);\n    }).catch(error => {\n      alert(\"Error occurred while loading customers: \" + error);\n    });\n  };\n  useEffect(() => {\n    setCustomerData();\n  }, []);\n  if (customers.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center\",\n    children: \"No customers\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 40\n  }, this);\n  console.log(customers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mx-2\",\n      children: \"Liste des clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-sm table-bordered table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Pr\\xE9nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Adresse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"table-group-divider\",\n          children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: customer.customerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: customer.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: customer.firstname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: customer.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Customer, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n_c = Customer;\n;\nvar _c;\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"names":["React","useEffect","useState","axios","GET_CUSTOMERS","LOCAL_HOST_CUSTOMER","jsxDEV","_jsxDEV","getCustomerById","customerId","response","get","data","error","console","Customer","_s","customers","setCustomers","setCustomerData","then","catch","alert","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","log","scope","map","customer","index","lastname","firstname","address","_c","$RefreshReg$"],"sources":["/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/epigreen-front/src/components/Customer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {GET_CUSTOMERS, LOCAL_HOST_CUSTOMER} from \"../constants/back\";\r\n\r\nexport const getCustomerById = async (customerId) => {\r\n    try {\r\n        const response = await axios.get(LOCAL_HOST_CUSTOMER + customerId);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Erreur lors de la récupération du client : \", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default function Customer() {\r\n    const [customers, setCustomers] = useState([]);\r\n\r\n    const setCustomerData = async () => {\r\n        axios.get(GET_CUSTOMERS).then((response) => {\r\n            setCustomers(response.data);\r\n        }).catch(error => {\r\n            alert(\"Error occurred while loading customers: \" + error);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCustomerData();\r\n    }, []);\r\n\r\n    if (customers.length === 0) return <div className=\"container text-center\">No customers</div>;\r\n    console.log(customers);\r\n\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <h4 className=\"mx-2\">Liste des clients</h4>\r\n            <div className=\"row\">\r\n                <table className=\"table table-sm table-bordered table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Id</th>\r\n                        <th scope=\"col\">Nom</th>\r\n                        <th scope=\"col\">Prénom</th>\r\n                        <th scope=\"col\">Adresse</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody className=\"table-group-divider\">\r\n                    {\r\n                        customers.map((customer, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{customer.customerId}</th>\r\n                                <td>{customer.lastname}</td>\r\n                                <td>{customer.firstname}</td>\r\n                                <td>{customer.address}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,aAAa,EAAEC,mBAAmB,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,OAAO,MAAMC,eAAe,GAAG,MAAOC,UAAU,IAAK;EACjD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACN,mBAAmB,GAAGI,UAAU,CAAC;IAClE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACnE,OAAO,IAAI;EACf;AACJ,CAAC;AAED,eAAe,SAASE,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMiB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChChB,KAAK,CAACQ,GAAG,CAACP,aAAa,CAAC,CAACgB,IAAI,CAAEV,QAAQ,IAAK;MACxCQ,YAAY,CAACR,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,CAACS,KAAK,CAACR,KAAK,IAAI;MACdS,KAAK,CAAC,0CAA0C,GAAGT,KAAK,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZkB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,SAAS,CAACM,MAAM,KAAK,CAAC,EAAE,oBAAOhB,OAAA;IAAKiB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC5Ff,OAAO,CAACgB,GAAG,CAACb,SAAS,CAAC;EAEtB,oBACIV,OAAA;IAAKiB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClClB,OAAA;MAAIiB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CtB,OAAA;MAAKiB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChBlB,OAAA;QAAOiB,SAAS,EAAC,2CAA2C;QAAAC,QAAA,gBACxDlB,OAAA;UAAAkB,QAAA,eACAlB,OAAA;YAAAkB,QAAA,gBACIlB,OAAA;cAAIwB,KAAK,EAAC,KAAK;cAAAN,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBtB,OAAA;cAAIwB,KAAK,EAAC,KAAK;cAAAN,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBtB,OAAA;cAAIwB,KAAK,EAAC,KAAK;cAAAN,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3BtB,OAAA;cAAIwB,KAAK,EAAC,KAAK;cAAAN,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACRtB,OAAA;UAAOiB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAElCR,SAAS,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC1B3B,OAAA;YAAAkB,QAAA,gBACIlB,OAAA;cAAIwB,KAAK,EAAC,KAAK;cAAAN,QAAA,EAAEQ,QAAQ,CAACxB;YAAU;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1CtB,OAAA;cAAAkB,QAAA,EAAKQ,QAAQ,CAACE;YAAQ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5BtB,OAAA;cAAAkB,QAAA,EAAKQ,QAAQ,CAACG;YAAS;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BtB,OAAA;cAAAkB,QAAA,EAAKQ,QAAQ,CAACI;YAAO;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJtBK,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACb,EAAA,CA/CuBD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA+C/B;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}