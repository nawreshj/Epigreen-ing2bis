{"ast":null,"code":"import axios from \"axios\";\nimport { LOCAL_HOST_DELIVERY_SCORING_API_SCORE, LOCAL_HOST_DELIVERY_SCORING_API_CO2 } from \"../constants/back\";\nexport const getDeliveryScore = async carbonFootprint => {\n  try {\n    const response = await axios.get(LOCAL_HOST_DELIVERY_SCORING_API_SCORE, {\n      params: {\n        carbonFootprint\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors du calcul du score de livraison : \", error);\n    return null;\n  }\n};\nexport const calculateCo2 = async (distance, kgCo2PerKm) => {\n  try {\n    const response = await axios.get(LOCAL_HOST_DELIVERY_SCORING_API_CO2, {\n      params: {\n        distance,\n        kgCo2PerKm\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Erreur lors du calcul de l'empreinte carbone : \", error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","LOCAL_HOST_DELIVERY_SCORING_API_SCORE","LOCAL_HOST_DELIVERY_SCORING_API_CO2","getDeliveryScore","carbonFootprint","response","get","params","data","error","console","calculateCo2","distance","kgCo2PerKm"],"sources":["/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/epigreen-front/src/components/DeliveryScoring.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {LOCAL_HOST_DELIVERY_SCORING_API_SCORE , LOCAL_HOST_DELIVERY_SCORING_API_CO2} from \"../constants/back\";\r\n\r\nexport const getDeliveryScore = async (carbonFootprint) => {\r\n    try {\r\n        const response = await axios.get(LOCAL_HOST_DELIVERY_SCORING_API_SCORE, {\r\n            params: { carbonFootprint },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Erreur lors du calcul du score de livraison : \", error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const calculateCo2 = async (distance, kgCo2PerKm) => {\r\n    try {\r\n        const response = await axios.get(LOCAL_HOST_DELIVERY_SCORING_API_CO2, {\r\n            params: { distance, kgCo2PerKm },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Erreur lors du calcul de l'empreinte carbone : \", error);\r\n        return null;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,qCAAqC,EAAGC,mCAAmC,QAAO,mBAAmB;AAE7G,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,eAAe,IAAK;EACvD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,qCAAqC,EAAE;MACpEM,MAAM,EAAE;QAAEH;MAAgB;IAC9B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACtE,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,UAAU,KAAK;EACxD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACJ,mCAAmC,EAAE;MAClEK,MAAM,EAAE;QAAEK,QAAQ;QAAEC;MAAW;IACnC,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACvE,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}