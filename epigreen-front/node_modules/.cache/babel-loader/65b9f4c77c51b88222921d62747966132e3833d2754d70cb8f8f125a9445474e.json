{"ast":null,"code":"var _jsxFileName = \"/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/epigreen-front/src/components/DemoEcTransport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { GET_PROCESS_ROUTES_BY_PRODUCT } from \"../constants/back\";\nimport { getResultFromGeocodingApi, getResultFromRoutingApiNaw } from \"../api/Geoapify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoEcTransport = () => {\n  _s();\n  const [productId, setProductId] = useState(\"\");\n  const [processRoutes, setProcessRoutes] = useState([]);\n  const [routeSelectedDetails, setRouteSelectedDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [carbonFootprintCalculated, setCarbonFootprint] = useState(null);\n  const fetchProcessRoutes = async () => {\n    if (!productId) {\n      alert(\"Veuillez entrer un ID produit valide.\");\n      return;\n    }\n    try {\n      const response = await axios.get(GET_PROCESS_ROUTES_BY_PRODUCT + productId);\n      setProcessRoutes(response.data);\n      setRouteSelectedDetails(null);\n      setError(null);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des trajets :\", error);\n      setError(\"Une erreur s'est produite lors de la récupération des trajets. Veuillez vérifier l'ID produit ou réessayer.\");\n      setProcessRoutes([]);\n    }\n  };\n  const fetchCityDetails = async route => {\n    try {\n      var _fromCityResponse$fea, _fromCityResponse$fea2, _fromCityResponse$fea3, _toCityResponse$featu, _toCityResponse$featu2, _toCityResponse$featu3;\n      const fromCityResponse = await getResultFromGeocodingApi(route.cityDep);\n      const toCityResponse = await getResultFromGeocodingApi(route.cityArr);\n      setRouteSelectedDetails({\n        idProcessRoutes: route.idProcessRoutes,\n        fromCity: {\n          city: route.cityDep,\n          latitude: (_fromCityResponse$fea = fromCityResponse.features[0]) === null || _fromCityResponse$fea === void 0 ? void 0 : _fromCityResponse$fea.properties.lat,\n          longitude: (_fromCityResponse$fea2 = fromCityResponse.features[0]) === null || _fromCityResponse$fea2 === void 0 ? void 0 : _fromCityResponse$fea2.properties.lon,\n          country: (_fromCityResponse$fea3 = fromCityResponse.features[0]) === null || _fromCityResponse$fea3 === void 0 ? void 0 : _fromCityResponse$fea3.properties.country\n        },\n        toCity: {\n          city: route.cityArr,\n          latitude: (_toCityResponse$featu = toCityResponse.features[0]) === null || _toCityResponse$featu === void 0 ? void 0 : _toCityResponse$featu.properties.lat,\n          longitude: (_toCityResponse$featu2 = toCityResponse.features[0]) === null || _toCityResponse$featu2 === void 0 ? void 0 : _toCityResponse$featu2.properties.lon,\n          country: (_toCityResponse$featu3 = toCityResponse.features[0]) === null || _toCityResponse$featu3 === void 0 ? void 0 : _toCityResponse$featu3.properties.country\n        },\n        carbonFootprint: route.carbonFootprint,\n        typeTransportation: route.typeTransportation,\n        area: route.area\n      });\n      setDistance(null);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des détails du trajet :\", error);\n      setError(\"Impossible de récupérer les détails pour le trajet sélectionné.\");\n    }\n  };\n  const calculateDistance = async () => {\n    if (!(routeSelectedDetails !== null && routeSelectedDetails !== void 0 && routeSelectedDetails.fromCity) || !(routeSelectedDetails !== null && routeSelectedDetails !== void 0 && routeSelectedDetails.toCity)) {\n      alert(\"Veuillez sélectionner une route.\");\n      return;\n    }\n    try {\n      const requestData = {\n        point1: [routeSelectedDetails.fromCity.longitude, routeSelectedDetails.fromCity.latitude],\n        point2: [routeSelectedDetails.toCity.longitude, routeSelectedDetails.toCity.latitude]\n      };\n      const response = await axios.post('http://localhost:8081/api/calculateDistance', requestData);\n      const distanceInKm = response.data.distance; // Assurez-vous que la réponse JSON contient une clé 'distance'\n      if (distanceInKm) {\n        setDistance(distanceInKm.toFixed(2));\n      } else {\n        alert(\"La distance n'a pas pu être calculée.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du calcul de la distance :\", error);\n      alert(\"Erreur lors du calcul de la distance.\");\n    }\n  };\n  const calculateCarbonFootprint = async () => {\n    if (!routeSelectedDetails || !routeSelectedDetails.fromCity || !routeSelectedDetails.toCity) {\n      alert(\"Veuillez d'abord sélectionner une route.\");\n      return;\n    }\n    if (!distance) {\n      alert(\"Veuillez calculer la distance d'abord.\");\n      return;\n    }\n    const route = routeSelectedDetails;\n    try {\n      const requestData = {\n        transportationType: route.typeTransportation,\n        distance: distance,\n        area: route.area\n      };\n      const response = await axios.post('http://localhost:8081/api/transportationMean/calculateCarbonFootprint', requestData);\n      const carbonFootprint = response.data;\n      setCarbonFootprint(carbonFootprint);\n      console.log(carbonFootprint);\n      alert(`Empreinte carbone calculée : ${carbonFootprint} kg éq.CO2.`);\n    } catch (error) {\n      console.error(\"Erreur lors du calcul de l'empreinte carbone :\", error);\n      alert(\"Une erreur s'est produite lors du calcul de l'empreinte carbone. Veuillez réessayer.\");\n    }\n  };\n  const updateCarbonFootprintRoute = async () => {\n    if (!distance) {\n      alert(\"Veuillez calculer la distance d'abord.\");\n      return;\n    }\n    // get the route selected\n    const route = processRoutes.find(route => route.idProcessRoutes === routeSelectedDetails.idProcessRoutes);\n    if (!route) {\n      alert(\"La route sélectionnée est introuvable.\");\n      return;\n    }\n\n    // Use of carbonFootprintCalculated const wich was calculated \n    if (carbonFootprintCalculated === null) {\n      alert(\"L'empreinte carbone n'a pas été calculée.\");\n      return;\n    }\n\n    // Mise à jour de l'empreinte carbone dans cityDetails\n    routeSelectedDetails.carbonFootprint = carbonFootprintCalculated;\n    console.log(\"cityDetails.carbonFootprint:\", routeSelectedDetails.carbonFootprint);\n\n    // Mise à jour de l'empreinte carbone de la route\n    route.carbonFootprint = routeSelectedDetails.carbonFootprint;\n    console.log(\"route.carbonFootprint:\", route.carbonFootprint);\n    try {\n      // Update of carbon footprint \n      await axios.post('http://localhost:8081/processroute/update', route);\n      alert(\"Empreinte carbone mise à jour avec succès !\");\n\n      // MAJ list of routes\n      setProcessRoutes(prevRoutes => prevRoutes.map(r => r.idProcessRoutes === route.idProcessRoutes ? route : r));\n      setRouteSelectedDetails(null);\n    } catch (error) {\n      console.error(\"Erreur lors de la mise à jour de l'empreinte carbone :\", error);\n      alert(\"Une erreur s'est produite lors de la mise à jour. Veuillez réessayer.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Demo EC Transport\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productIdInput\",\n        children: \"Entrer l'ID produit :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"productIdInput\",\n        type: \"number\",\n        value: productId,\n        onChange: e => setProductId(e.target.value),\n        placeholder: \"ID Produit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchProcessRoutes,\n        children: \"Rechercher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 23\n    }, this), processRoutes.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID Trajet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type de Transport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ville de D\\xE9part\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ville d'Arriv\\xE9e\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Empreinte Carbone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processRoutes.map(route => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => fetchCityDetails(route),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.idProcessRoutes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.typeTransportation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.cityDep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.cityArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.area\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.carbonFootprint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)]\n        }, route.idProcessRoutes, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this) : !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune route trouv\\xE9e pour cet ID produit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), routeSelectedDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9tails du Trajet S\\xE9lectionn\\xE9 :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"D\\xE9part\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arriv\\xE9e\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ville :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.fromCity.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pays :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.fromCity.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Latitude :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.fromCity.latitude]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Longitude :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.fromCity.longitude]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ville :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.toCity.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pays :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.toCity.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Latitude :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.toCity.latitude]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Longitude :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 36\n                }, this), \" \", routeSelectedDetails.toCity.longitude]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Type de Transport :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 24\n        }, this), \" \", routeSelectedDetails.typeTransportation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Empreinte Carbone :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 24\n        }, this), \" \", routeSelectedDetails.carbonFootprint, \" kg CO2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distance :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 37\n        }, this), \" \", distance, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateDistance,\n          children: \"Calculer la distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateCarbonFootprint,\n          children: \"Calculer l'empreinte carbone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateCarbonFootprintRoute,\n          children: \"Mettre \\xE0 jour l'empreinte carbone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(DemoEcTransport, \"wkq7hzQUyVHsgc7EJ+UGP0DybsI=\");\n_c = DemoEcTransport;\nexport default DemoEcTransport;\nvar _c;\n$RefreshReg$(_c, \"DemoEcTransport\");","map":{"version":3,"names":["React","useState","axios","GET_PROCESS_ROUTES_BY_PRODUCT","getResultFromGeocodingApi","getResultFromRoutingApiNaw","jsxDEV","_jsxDEV","DemoEcTransport","_s","productId","setProductId","processRoutes","setProcessRoutes","routeSelectedDetails","setRouteSelectedDetails","error","setError","distance","setDistance","carbonFootprintCalculated","setCarbonFootprint","fetchProcessRoutes","alert","response","get","data","console","fetchCityDetails","route","_fromCityResponse$fea","_fromCityResponse$fea2","_fromCityResponse$fea3","_toCityResponse$featu","_toCityResponse$featu2","_toCityResponse$featu3","fromCityResponse","cityDep","toCityResponse","cityArr","idProcessRoutes","fromCity","city","latitude","features","properties","lat","longitude","lon","country","toCity","carbonFootprint","typeTransportation","area","calculateDistance","requestData","point1","point2","post","distanceInKm","toFixed","calculateCarbonFootprint","transportationType","log","updateCarbonFootprintRoute","find","prevRoutes","map","r","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","onClick","style","color","length","_c","$RefreshReg$"],"sources":["/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/epigreen-front/src/components/DemoEcTransport.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {GET_PROCESS_ROUTES_BY_PRODUCT} from \"../constants/back\";\r\nimport {getResultFromGeocodingApi, getResultFromRoutingApiNaw} from \"../api/Geoapify\";\r\n\r\nconst DemoEcTransport = () => {\r\n    const [productId, setProductId] = useState(\"\");\r\n    const [processRoutes, setProcessRoutes] = useState([]);\r\n    const [routeSelectedDetails, setRouteSelectedDetails] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [distance, setDistance] = useState(null);\r\n    const [carbonFootprintCalculated, setCarbonFootprint] = useState(null);\r\n\r\n\r\n\r\n    const fetchProcessRoutes = async () => {\r\n        if (!productId) {\r\n            alert(\"Veuillez entrer un ID produit valide.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(GET_PROCESS_ROUTES_BY_PRODUCT + productId);\r\n            setProcessRoutes(response.data);\r\n            setRouteSelectedDetails(null);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la récupération des trajets :\", error);\r\n            setError(\"Une erreur s'est produite lors de la récupération des trajets. Veuillez vérifier l'ID produit ou réessayer.\");\r\n            setProcessRoutes([]);\r\n        }\r\n    };\r\n\r\n    const fetchCityDetails = async (route) => {\r\n\r\n        try {\r\n            const fromCityResponse = await getResultFromGeocodingApi(route.cityDep);\r\n            const toCityResponse = await getResultFromGeocodingApi(route.cityArr);\r\n\r\n            setRouteSelectedDetails({\r\n                idProcessRoutes: route.idProcessRoutes,\r\n                fromCity: {\r\n                    city: route.cityDep,\r\n                    latitude: fromCityResponse.features[0]?.properties.lat,\r\n                    longitude: fromCityResponse.features[0]?.properties.lon,\r\n                    country: fromCityResponse.features[0]?.properties.country,\r\n                },\r\n                toCity: {\r\n                    city: route.cityArr,\r\n                    latitude: toCityResponse.features[0]?.properties.lat,\r\n                    longitude: toCityResponse.features[0]?.properties.lon,\r\n                    country: toCityResponse.features[0]?.properties.country,\r\n                },\r\n                carbonFootprint: route.carbonFootprint,\r\n                typeTransportation: route.typeTransportation,\r\n                area: route.area,\r\n            });\r\n            setDistance(null); \r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la récupération des détails du trajet :\", error);\r\n            setError(\"Impossible de récupérer les détails pour le trajet sélectionné.\");\r\n        }\r\n    };\r\n\r\n    const calculateDistance = async () => {\r\n        if (!routeSelectedDetails?.fromCity || !routeSelectedDetails?.toCity) {\r\n            alert(\"Veuillez sélectionner une route.\");\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const requestData = {\r\n                point1: [routeSelectedDetails.fromCity.longitude, routeSelectedDetails.fromCity.latitude],\r\n                point2: [routeSelectedDetails.toCity.longitude, routeSelectedDetails.toCity.latitude],\r\n            };\r\n    \r\n            const response = await axios.post('http://localhost:8081/api/calculateDistance', requestData);\r\n    \r\n            const distanceInKm = response.data.distance; // Assurez-vous que la réponse JSON contient une clé 'distance'\r\n            if (distanceInKm) {\r\n                setDistance(distanceInKm.toFixed(2));\r\n            } else {\r\n                alert(\"La distance n'a pas pu être calculée.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erreur lors du calcul de la distance :\", error);\r\n            alert(\"Erreur lors du calcul de la distance.\");\r\n        }\r\n    };\r\n    \r\n\r\n    const calculateCarbonFootprint = async () => {\r\n        if (!routeSelectedDetails || !routeSelectedDetails.fromCity || !routeSelectedDetails.toCity) {\r\n            alert(\"Veuillez d'abord sélectionner une route.\");\r\n            return;\r\n        }\r\n\r\n        if (!distance) {\r\n            alert(\"Veuillez calculer la distance d'abord.\");\r\n            return;\r\n        }\r\n        const route = routeSelectedDetails;\r\n        try {\r\n            const requestData = {\r\n                transportationType: route.typeTransportation,\r\n                distance: distance,\r\n                area: route.area,\r\n            };\r\n\r\n            const response = await axios.post('http://localhost:8081/api/transportationMean/calculateCarbonFootprint', requestData);\r\n\r\n            const carbonFootprint = response.data;\r\n            setCarbonFootprint(carbonFootprint);\r\n            console.log(carbonFootprint);\r\n            alert(`Empreinte carbone calculée : ${carbonFootprint} kg éq.CO2.`);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors du calcul de l'empreinte carbone :\", error);\r\n            alert(\"Une erreur s'est produite lors du calcul de l'empreinte carbone. Veuillez réessayer.\");\r\n        }\r\n    };\r\n\r\n    const updateCarbonFootprintRoute = async () => {\r\n        if (!distance) {\r\n            alert(\"Veuillez calculer la distance d'abord.\");\r\n            return;\r\n        }\r\n     // get the route selected\r\n        const route = processRoutes.find(route => route.idProcessRoutes === routeSelectedDetails.idProcessRoutes);\r\n        if (!route) {\r\n            alert(\"La route sélectionnée est introuvable.\");\r\n            return;\r\n        }\r\n    \r\n        // Use of carbonFootprintCalculated const wich was calculated \r\n        if (carbonFootprintCalculated === null) {\r\n            alert(\"L'empreinte carbone n'a pas été calculée.\");\r\n            return;\r\n        }\r\n    \r\n        // Mise à jour de l'empreinte carbone dans cityDetails\r\n        routeSelectedDetails.carbonFootprint = carbonFootprintCalculated;\r\n        console.log(\"cityDetails.carbonFootprint:\", routeSelectedDetails.carbonFootprint);\r\n    \r\n        // Mise à jour de l'empreinte carbone de la route\r\n        route.carbonFootprint = routeSelectedDetails.carbonFootprint;\r\n        console.log(\"route.carbonFootprint:\", route.carbonFootprint);\r\n    \r\n        try {\r\n            // Update of carbon footprint \r\n            await axios.post('http://localhost:8081/processroute/update', route);\r\n            alert(\"Empreinte carbone mise à jour avec succès !\");\r\n    \r\n            // MAJ list of routes\r\n            setProcessRoutes((prevRoutes) =>\r\n                prevRoutes.map((r) =>\r\n                    r.idProcessRoutes === route.idProcessRoutes ? route : r\r\n                )\r\n            );\r\n            setRouteSelectedDetails(null); \r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la mise à jour de l'empreinte carbone :\", error);\r\n            alert(\"Une erreur s'est produite lors de la mise à jour. Veuillez réessayer.\");\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Demo EC Transport</h2>\r\n            <div>\r\n                <label htmlFor=\"productIdInput\">Entrer l'ID produit :</label>\r\n                <input\r\n                    id=\"productIdInput\"\r\n                    type=\"number\"\r\n                    value={productId}\r\n                    onChange={(e) => setProductId(e.target.value)}\r\n                    placeholder=\"ID Produit\"\r\n                />\r\n                <button onClick={fetchProcessRoutes}>Rechercher</button>\r\n            </div>\r\n            <br />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {processRoutes.length > 0 ? (\r\n                <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID Trajet</th>\r\n                        <th>Type de Transport</th>\r\n                        <th>Ville de Départ</th>\r\n                        <th>Ville d'Arrivée</th>\r\n                        <th>Zone</th>\r\n                        <th>Empreinte Carbone</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {processRoutes.map((route) => (\r\n                        <tr key={route.idProcessRoutes} onClick={() => fetchCityDetails(route)}>\r\n                            <td>{route.idProcessRoutes}</td>\r\n                            <td>{route.typeTransportation}</td>\r\n                            <td>{route.cityDep}</td>\r\n                            <td>{route.cityArr}</td>\r\n                            <td>{route.area}</td>\r\n                            <td>{route.carbonFootprint}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                !error && <p>Aucune route trouvée pour cet ID produit.</p>\r\n            )}\r\n            <br />\r\n            {routeSelectedDetails && (\r\n                <div>\r\n                    <h3>Détails du Trajet Sélectionné :</h3>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Départ</th>\r\n                            <th>Arrivée</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p><strong>Ville :</strong> {routeSelectedDetails.fromCity.city}</p>\r\n                                <p><strong>Pays :</strong> {routeSelectedDetails.fromCity.country}</p>\r\n                                <p><strong>Latitude :</strong> {routeSelectedDetails.fromCity.latitude}</p>\r\n                                <p><strong>Longitude :</strong> {routeSelectedDetails.fromCity.longitude}</p>\r\n                            </td>\r\n                            <td>\r\n                                <p><strong>Ville :</strong> {routeSelectedDetails.toCity.city}</p>\r\n                                <p><strong>Pays :</strong> {routeSelectedDetails.toCity.country}</p>\r\n                                <p><strong>Latitude :</strong> {routeSelectedDetails.toCity.latitude}</p>\r\n                                <p><strong>Longitude :</strong> {routeSelectedDetails.toCity.longitude}</p>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <p><strong>Type de Transport :</strong> {routeSelectedDetails.typeTransportation}</p>\r\n                    <p><strong>Empreinte Carbone :</strong> {routeSelectedDetails.carbonFootprint} kg CO2</p>\r\n                    {distance && <p><strong>Distance :</strong> {distance} km</p>}\r\n                    <div>\r\n                        <button onClick={calculateDistance}>Calculer la distance</button>\r\n                        <button onClick={calculateCarbonFootprint}>Calculer l'empreinte carbone</button>\r\n                        <button onClick={updateCarbonFootprintRoute}>Mettre à jour l'empreinte carbone</button> {/* Nouveau bouton */}\r\n\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DemoEcTransport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}